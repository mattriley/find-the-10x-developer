#!/usr/bin/env node

const everyPermutation = arr => arr[0] ? arr.reduce((acc, n) => (everyPermutation(arr.filter(m => m != n)).forEach(y => acc.push([n, ...y])), acc), []) : [[]];
const findPermutation = (arr, predicates) => everyPermutation(arr).find(permutation => predicates.every(predicate => predicate(permutation)));

const notBest = a => arr => arr[0] !== a;
const notWorst = a => arr => arr[arr.length - 1] !== a;
const notWorseThan = (a, b) => arr => arr.indexOf(a) < arr.indexOf(b);
const notAdjacentTo = (a, b) => arr => (i => [i - 1, i + 1].every(i => arr[i] !== a))(arr.indexOf(b));

const developers = ['Jessie', 'Evan', 'John', 'Sarah', 'Matt'];

const facts = [
    notBest('Jessie'),
    notWorst('Evan'),
    notBest('John'),
    notWorst('John'),
    notWorseThan('Sarah', 'Evan'),
    notAdjacentTo('Matt', 'John'),
    notAdjacentTo('John', 'Evan')
];

console.log(findPermutation(developers, facts));
